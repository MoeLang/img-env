name: melodic pc

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}
    - 
      name: Checkout
      uses: actions/checkout@v2
    - 
      name: Build and push the core docker image
      run: |
        DOCKER_REPO_1=ghcr.io/autocore-ats/core-bionic-pc:latest
        docker build . --file core.bionic.pc.dockerfile --tag ${DOCKER_REPO_1}
        docker push ${DOCKER_REPO_1}
    - 
      name: Build and push the base docker image
      run: |
        DOCKER_REPO_2=ghcr.io/autocore-ats/base-melodic-pc:latest
        docker build . --file base.melodic.dockerfile --tag ${DOCKER_REPO_2} --build-arg FROM_IMAGE=${DOCKER_REPO_1}
        docker push ${DOCKER_REPO_2}
    - 
      name: Build and push the runtime docker image
      run: |
        DOCKER_REPO_3=ghcr.io/autocore-ats/runtime-melodic-pc:latest
        docker build . --file runtime.melodic.dockerfile --tag ${DOCKER_REPO_3} --build-arg FROM_IMAGE=${DOCKER_REPO_2}
        docker push ${DOCKER_REPO_3}
    - 
      name: Build and push the build docker image
      run: |
        DOCKER_REPO_4=ghcr.io/autocore-ats/build-melodic-pc:latest
        docker build . --file build.melodic.dockerfile --tag ${DOCKER_REPO_4} --build-arg FROM_IMAGE=${DOCKER_REPO_3}
        docker push ${DOCKER_REPO_4}
    - 
      name: Build and push the devel docker image
      run: |
        DOCKER_REPO_5=ghcr.io/autocore-ats/devel-melodic-pc:latest
        docker build . --file devel.melodic.dockerfile --tag ${DOCKER_REPO_5} --build-arg FROM_IMAGE=${DOCKER_REPO_4}
        docker push ${DOCKER_REPO_5}
    - 
      name: Build and push the bridge base docker image
      run: |
        DOCKER_REPO_6=ghcr.io/autocore-ats/base-eloquent-bridge-pc:latest
        docker build . --file base.eloquent.dockerfile --tag tmp --build-arg FROM_IMAGE=${DOCKER_REPO_2}
        docker build . --file base.eloquent.bridge.dockerfile --tag ${DOCKER_REPO_6} --build-arg FROM_IMAGE=tmp
        docker push ${DOCKER_REPO_6}
    -
      name: Build and push the bridge runtime docker image
      run: |
        DOCKER_REPO_7=ghcr.io/autocore-ats/runtime-eloquent-bridge-pc:latest
        docker build . --file runtime.melodic.dockerfile --tag tmp --build-arg FROM_IMAGE=${DOCKER_REPO_6}
        docker build . --file runtime.eloquent.dockerfile --tag tmp --build-arg FROM_IMAGE=tmp
        docker build . --file runtime.eloquent.bridge.dockerfile --tag ${DOCKER_REPO_7} --build-arg FROM_IMAGE=tmp
        docker push ${DOCKER_REPO_7}
    -
      name: Build and push the bridge build docker image
      run: |
        DOCKER_REPO_8=ghcr.io/autocore-ats/build-eloquent-bridge-pc:latest
        docker build . --file build.melodic.dockerfile --tag tmp --build-arg FROM_IMAGE=${DOCKER_REPO_7}
        docker build . --file build.eloquent.dockerfile --tag tmp --build-arg FROM_IMAGE=tmp
        docker build . --file build.eloquent.bridge.dockerfile --tag ${DOCKER_REPO_8} --build-arg FROM_IMAGE=tmp
        docker push ${DOCKER_REPO_8}
    -
      name: Build and push the bridge devel docker image
      run: |
        DOCKER_REPO_9=ghcr.io/autocore-ats/devel-eloquent-bridge-pc:latest
        docker build . --file devel.melodic.dockerfile --tag tmp --build-arg FROM_IMAGE=${DOCKER_REPO_8}
        docker build . --file devel.eloquent.dockerfile --tag tmp --build-arg FROM_IMAGE=tmp
        docker build . --file devel.eloquent.bridge.dockerfile --tag ${DOCKER_REPO_9} --build-arg FROM_IMAGE=tmp
        docker push ${DOCKER_REPO_9}
