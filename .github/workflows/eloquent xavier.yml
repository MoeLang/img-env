name: eloquent xavier

on:
  push:
    branches:
     - 'main'
     - 'dev'

  workflow_dispatch:

jobs:
  eloquent-xavier:
    runs-on: ubuntu-latest
    env:
      DOCKER_REPO_1: ghcr.io/${{ github.repository_owner }}/core-eloquent-xavier:latest
      DOCKER_REPO_2: ghcr.io/${{ github.repository_owner }}/base-eloquent-xavier:latest
      DOCKER_REPO_2_tmp: ghcr.io/${{ github.repository_owner }}/base-eloquent-xavier_tmp:latest
      DOCKER_REPO_3: ghcr.io/${{ github.repository_owner }}/runtime-eloquent-xavier:latest
      DOCKER_REPO_3_tmp: ghcr.io/${{ github.repository_owner }}/runtime-eloquent-xavier_tmp:latest
      DOCKER_REPO_4: ghcr.io/${{ github.repository_owner }}/build-eloquent-xavier:latest
      DOCKER_REPO_5: ghcr.io/${{ github.repository_owner }}/devel-eloquent-xavier:latest
    steps:
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}
    - 
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Build and push the core docker image
      run: docker buildx build --output "type=image,push=true" --platform linux/arm64 --build-arg FROM_IMAGE=nvcr.io/nvidia/l4t-base:r32.4.4 --tag $DOCKER_REPO_1 --file core.dockerfile .
    - 
      name: Build and push the base docker image
      run: docker buildx build --output "type=image,push=true" --platform linux/arm64 --build-arg FROM_IMAGE=$DOCKER_REPO_1 --tag $DOCKER_REPO_2 --file base.eloquent.dockerfile .
    - 
      name: Build and push the runtime docker image
      run: |
        docker buildx build --output "type=image,push=true" --platform linux/arm64 --build-arg FROM_IMAGE=$DOCKER_REPO_2 --tag $DOCKER_REPO_2_tmp --file runtime.eloquent.dockerfile .
        docker buildx build --output "type=image,push=true" --platform linux/arm64 --build-arg FROM_IMAGE=$DOCKER_REPO_2_tmp --tag $DOCKER_REPO_3 --file runtime.dockerfile .
    - 
      name: Build and push the build docker image
      run: |
        docker buildx build --output "type=image,push=true" --platform linux/arm64 --build-arg FROM_IMAGE=$DOCKER_REPO_3 --tag $DOCKER_REPO_3_tmp --file build.eloquent.dockerfile .
        docker buildx build --output "type=image,push=true" --platform linux/arm64 --build-arg FROM_IMAGE=$DOCKER_REPO_3_tmp --tag $DOCKER_REPO_4 --file build.dockerfile .
    - 
      name: Build and push the devel docker image
      run: docker buildx build --output "type=image,push=true" --platform linux/arm64 --build-arg FROM_IMAGE=$DOCKER_REPO_4 --tag $DOCKER_REPO_5 --file devel.dockerfile .